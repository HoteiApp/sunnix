name: Verify New Server Setup

on:
  workflow_dispatch:
    inputs:
      verbose_output:
        description: 'Mostrar salida detallada'
        type: boolean
        default: false
        required: true

jobs:
  verify-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Verify LDAP Installation Status
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.IP_ADDRESS }}
          USER_NAME: ${{ secrets.USER_NAME }}
          VERBOSE: ${{ inputs.verbose_output }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # Copiar el archivo de servicio al servidor
          scp -o StrictHostKeyChecking=no -i private_key.pem extras/sunissup.service $USER_NAME@$HOSTNAME:/tmp/

          # Primero verificamos si LDAP est√° instalado
          NEEDS_LDAP=$(ssh -o StrictHostKeyChecking=no -i private_key.pem $USER_NAME@$HOSTNAME 'command -v slapd &> /dev/null; echo $?')
          
          # Si LDAP no est√° instalado, primero lo instalamos
          if [ "$NEEDS_LDAP" = "1" ]; then
            echo "üîç LDAP no est√° instalado, procediendo con la instalaci√≥n..."
            
            ssh -o StrictHostKeyChecking=no -i private_key.pem $USER_NAME@$HOSTNAME '
              sudo DEBIAN_FRONTEND=noninteractive apt-get install -y slapd ldap-utils
            '
            
            # Despu√©s de instalar LDAP, procedemos con la configuraci√≥n
            echo "üîß Preparando archivos de configuraci√≥n..."
            git clone --depth 1 https://${{ secrets.LDAP_TOKEN }}@github.com/Testing-zentinelle/zentinelle-ldap_sunissup.git ldap_config
            
            # Preparar archivos
            cd ldap_config
            tar czf ../ldap_files.tar.gz ldap/
            cd ..
            
            # Copiar archivos
            scp -o StrictHostKeyChecking=no -i private_key.pem ldap_files.tar.gz $USER_NAME@$HOSTNAME:/tmp/
            scp -o StrictHostKeyChecking=no -i private_key.pem ldap_config/default-slapd $USER_NAME@$HOSTNAME:/tmp/
          fi

          # Continuar con la verificaci√≥n de servicios
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER_NAME@$HOSTNAME '
            echo "üîç Verificando herramientas necesarias..."
            if ! command -v ss &> /dev/null; then
              echo "‚öôÔ∏è Instalando iproute2..."
              sudo apt-get update
              sudo apt-get install -y iproute2
            fi

            # MariaDB Verification
            echo "üîç Verificando MariaDB..."
            if ! command -v mariadb &> /dev/null; then
              echo "‚öôÔ∏è MariaDB no est√° instalado. Instalando..."
              sudo apt-get update
              sudo apt-get install -y mariadb-server
              sudo systemctl start mariadb
              sudo systemctl enable mariadb
              echo "‚úÖ MariaDB instalado correctamente"
            else
              echo "‚úÖ MariaDB ya est√° instalado"
            fi

            if [ "$VERBOSE" = "true" ]; then
              echo "=== Versi√≥n de MariaDB ==="
              mariadb --version
            fi

            echo "=== Verificando estado del servicio MariaDB ==="
            if ! systemctl is-active --quiet mariadb; then
              echo "‚öôÔ∏è Iniciando servicio MariaDB..."
              sudo systemctl start mariadb
              sudo systemctl enable mariadb
            fi
            echo "‚úÖ Servicio MariaDB est√° activo"
            
            if [ "$VERBOSE" = "true" ]; then
              systemctl status mariadb
            fi

            echo "=== Verificando puerto MariaDB localmente ==="
            if ! ss -tuln | grep "LISTEN.*:3306" > /dev/null; then
              echo "‚ùå Error: Puerto 3306 no est√° escuchando localmente"
              exit 1
            fi
            echo "‚úÖ Puerto 3306 est√° escuchando localmente"
            
            if [ "$VERBOSE" = "true" ]; then
              echo "=== Detalles del puerto 3306 ==="
              ss -tuln | grep "LISTEN.*:3306"
            fi

            # OpenLDAP Verification
            echo "üîç Verificando OpenLDAP..."
            if command -v slapd &> /dev/null; then
              echo "‚úÖ OpenLDAP est√° instalado"
              
              # Si los archivos de configuraci√≥n existen en /tmp, procedemos a configurar
              if [ -f "/tmp/ldap_files.tar.gz" ] && [ -f "/tmp/default-slapd" ]; then
                echo "üîß Configurando OpenLDAP con archivos del repositorio..."
                sudo systemctl stop slapd
                
                # Copiar default-slapd
                sudo cp /tmp/default-slapd /etc/default/slapd
                
                # Extraer y copiar archivos de configuraci√≥n
                cd /tmp
                sudo tar xzf ldap_files.tar.gz
                sudo rm -rf /etc/ldap
                sudo cp -r ldap /etc/
                
                # Borrar base de datos antigua y preparar nueva
                echo "üóëÔ∏è Limpiando base de datos antigua..."
                sudo rm -rf /var/lib/ldap/*
                
                echo "üì• Importando nueva base de datos..."
                sudo slapadd -l /etc/ldap/export-default.ldif
                
                echo "üîê Ajustando permisos..."
                sudo chown -R openldap:openldap /etc/ldap
                sudo chmod -R 750 /etc/ldap
                sudo chown -R openldap:openldap /var/lib/ldap
                sudo chmod -R 700 /var/lib/ldap
                
                # Limpiar archivos temporales
                rm -rf ldap/
                rm ldap_files.tar.gz
                rm default-slapd
              fi
            else
              echo "‚ùå Error: OpenLDAP no est√° instalado correctamente"
              exit 1
            fi

            echo "=== Verificando estado del servicio OpenLDAP ==="
            if ! systemctl is-active --quiet slapd; then
              echo "‚öôÔ∏è Iniciando servicio OpenLDAP..."
              sudo systemctl start slapd
              sudo systemctl enable slapd
            fi
            echo "‚úÖ Servicio OpenLDAP est√° activo"
            
            if [ "$VERBOSE" = "true" ]; then
              systemctl status slapd
            fi

            echo "=== Verificando puerto OpenLDAP localmente ==="
            if ! ss -tuln | grep "LISTEN.*:389" > /dev/null; then
              echo "‚ùå Error: Puerto 389 no est√° escuchando localmente"
              exit 1
            fi
            echo "‚úÖ Puerto 389 est√° escuchando localmente"
            
            if [ "$VERBOSE" = "true" ]; then
              echo "=== Detalles del puerto 389 ==="
              ss -tuln | grep "LISTEN.*:389"
            fi

            # Configuraci√≥n del servicio SunissUp
            echo "üîß Configurando servicio SunissUp..."
            
            # Copiar el archivo de servicio a su ubicaci√≥n final
            sudo cp /tmp/sunissup.service /etc/systemd/system/
            sudo rm /tmp/sunissup.service

            # Ajustar permisos del archivo de servicio
            sudo chmod 644 /etc/systemd/system/sunissup.service

            # Recargar configuraci√≥n de systemd
            sudo systemctl daemon-reload

            # Habilitar el servicio para que inicie con el sistema
            sudo systemctl enable sunissup.service

            echo "‚úÖ Servicio SunissUp configurado y habilitado (no iniciado)"
            
            if [ "$VERBOSE" = "true" ]; then
              echo "=== Estado del servicio SunissUp ==="
              systemctl status sunissup.service || true
            fi
          '
          
